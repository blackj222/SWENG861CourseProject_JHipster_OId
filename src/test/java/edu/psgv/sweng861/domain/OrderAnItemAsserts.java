package edu.psgv.sweng861.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrderAnItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderAnItemAllPropertiesEquals(OrderAnItem expected, OrderAnItem actual) {
        assertOrderAnItemAutoGeneratedPropertiesEquals(expected, actual);
        assertOrderAnItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderAnItemAllUpdatablePropertiesEquals(OrderAnItem expected, OrderAnItem actual) {
        assertOrderAnItemUpdatableFieldsEquals(expected, actual);
        assertOrderAnItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderAnItemAutoGeneratedPropertiesEquals(OrderAnItem expected, OrderAnItem actual) {
        assertThat(expected)
            .as("Verify OrderAnItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderAnItemUpdatableFieldsEquals(OrderAnItem expected, OrderAnItem actual) {
        assertThat(expected)
            .as("Verify OrderAnItem relevant properties")
            .satisfies(e -> assertThat(e.getAsin()).as("check asin").isEqualTo(actual.getAsin()))
            .satisfies(e -> assertThat(e.getProductTitle()).as("check productTitle").isEqualTo(actual.getProductTitle()))
            .satisfies(e -> assertThat(e.getProductPrice()).as("check productPrice").isEqualTo(actual.getProductPrice()))
            .satisfies(
                e -> assertThat(e.getProductOriginalPrice()).as("check productOriginalPrice").isEqualTo(actual.getProductOriginalPrice())
            )
            .satisfies(e -> assertThat(e.getCurrency()).as("check currency").isEqualTo(actual.getCurrency()))
            .satisfies(e -> assertThat(e.getProductStarRating()).as("check productStarRating").isEqualTo(actual.getProductStarRating()))
            .satisfies(e -> assertThat(e.getProductNumRatings()).as("check productNumRatings").isEqualTo(actual.getProductNumRatings()))
            .satisfies(e -> assertThat(e.getProductUrl()).as("check productUrl").isEqualTo(actual.getProductUrl()))
            .satisfies(e -> assertThat(e.getProductPhoto()).as("check productPhoto").isEqualTo(actual.getProductPhoto()))
            .satisfies(e -> assertThat(e.getProductNumOffers()).as("check productNumOffers").isEqualTo(actual.getProductNumOffers()))
            .satisfies(
                e ->
                    assertThat(e.getProductMinimumOfferPrice())
                        .as("check productMinimumOfferPrice")
                        .isEqualTo(actual.getProductMinimumOfferPrice())
            )
            .satisfies(e -> assertThat(e.getIsBestSeller()).as("check isBestSeller").isEqualTo(actual.getIsBestSeller()))
            .satisfies(e -> assertThat(e.getIsAmazonChoice()).as("check isAmazonChoice").isEqualTo(actual.getIsAmazonChoice()))
            .satisfies(e -> assertThat(e.getIsPrime()).as("check isPrime").isEqualTo(actual.getIsPrime()))
            .satisfies(
                e -> assertThat(e.getClimatePledgeFriendly()).as("check climatePledgeFriendly").isEqualTo(actual.getClimatePledgeFriendly())
            )
            .satisfies(e -> assertThat(e.getSalesVolume()).as("check salesVolume").isEqualTo(actual.getSalesVolume()))
            .satisfies(e -> assertThat(e.getDelivery()).as("check delivery").isEqualTo(actual.getDelivery()))
            .satisfies(e -> assertThat(e.getCouponText()).as("check couponText").isEqualTo(actual.getCouponText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderAnItemUpdatableRelationshipsEquals(OrderAnItem expected, OrderAnItem actual) {
        assertThat(expected)
            .as("Verify OrderAnItem relationships")
            .satisfies(e -> assertThat(e.getOrder()).as("check order").isEqualTo(actual.getOrder()));
    }
}
